{"version":3,"sources":["tanksscreen.png","snakescreen.PNG","App.js","serviceWorker.js","index.js","croppedface.jpg"],"names":["module","exports","App","text","play","Button","variant","size","href","isMobile","className","Container","fluid","Row","Col","sm","Card","bg","border","id","Img","src","img","alt","Body","Title","Text","CardGroup","ssc","tsc","icon","url","borderColor","iconSize","backgroundColor","style","fontSize","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e4a7f70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tanksscreen.1e715af8.png\";","module.exports = __webpack_public_path__ + \"static/media/snakescreen.3d7eef17.PNG\";","import React from 'react';\nimport './App.css';\nimport './custom.scss';\nimport img from './croppedface.jpg';\nimport tsc from './tanksscreen.png';\nimport ssc from './snakescreen.PNG';\n\nimport {Row, Col, Container, Card, CardGroup, Button} from 'react-bootstrap';\nimport {SocialMediaIconsReact} from 'social-media-icons-react';\nimport {isMobile} from 'react-device-detect';\n\n\nfunction App() {\n\n  const background = 'dark';\n  const text = 'light';\n  let play = <Button variant='secondary' size='sm' href='https://github.com/pmkstaples/Snake-Godot-/tree/master/SnakeExecutables'>Play Snake!</Button>;\n\n  if (isMobile) {\n    play = <div>Not available to play on mobile!</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"Main\">\n          <Container fluid=\"md\">\n            <Row> \n              <Col sm={4}>\n                <Card text={text} bg={background} border={text} id='WhoIAm'>\n                  <Card.Img variant=\"top\" src={img} alt=\"Extremely Handsome Man\" />\n                  <Card.Body>\n                    <Card.Title text='info'>\n                      Who I Am\n                    </Card.Title>\n                    <Card.Text className='Who'>\n                      <p>\n                      Calgary man, born and raised. Mount Royal University and \n                      University of Calgary alumnus for Computer Science and Sociology. Love learning, growing and\n                      having new experiences. Tech enthusiast. Team work makes the dream work.\n                      </p>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col>\n                <Card text={text} bg={background} border={text} id='WhatIDo'>\n                  <Card.Body>\n                    <Card.Title>\n                      What I Do\n                    </Card.Title>\n                    <Card.Text>\n                      <ul>\n                        <li> Web Developer (HTML/CSS/JavaScript/React)</li>\n                          <div className=\"Desc\">\n                            Recently diving into the world of web-based projects and the magic of React. \n                            First project was this very website.\n                          </div>\n                        <li> Game Developer (C++/Godot+GDScript)</li>\n                          <div className=\"Desc\">\n                            My favourite activity, coding and designing games is my passion. \n                            Built a few small games, and currently working on a rudimentary engine for personal use\n                          </div>\n                        <li> Team Player</li>\n                          <div className=\"Desc\">\n                            Spent most of my life working in environments that require coordination and team work. This has taught me excellent communication\n                            and mediation skills. Keeping a team moving in a unified direction with minimal friction.\n                          </div>\n                        <li>\n                          Generalist\n                        </li>\n                          <div className=\"Desc\">\n                            In any position I've been in, I take pride in learning enough to be able to fill any role, making myself as valuable as possible. Having someone \n                            to fill any gaps in a team keeps everything smooth and timely. \n                          </div>\n                      </ul>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col>\n                <Card text={text} bg={background} border={text} id='WhatIveDone'>\n                  <Card.Body>\n                    <Card.Title>\n                      What I've Done\n                    </Card.Title>\n                    <Card.Text>\n                      <CardGroup>\n                        <Card text={text} bg={background} border={text}>\n                          <Card.Title>\n                            Snake\n                          </Card.Title>\n                          <Card.Img src={ssc} alt=\"Black and White segmented snake beside a white pellet.\"/>\n                          <Card.Text>\n                            <div className=\"Desc\">\n                            A simple Snake game designed and built from scratch in the Godot engine. Chose this type of game\n                            because of a relatively simple scope, useful for learning a completely new engine and language. \n                            </div>\n                          </Card.Text>\n                          <br />\n                         {play}\n                        </Card>\n                        <Card text={text} bg={background} border={text}>\n                          <Card.Title>\n                            Tanks!\n                          </Card.Title>\n                          <Card.Img src={tsc} alt=\"Two tanks facing each other on a plane, with a scoreboard along the top.\" />\n                          <Card.Text>\n                            <div className='Desc'>\n                            An easy Battle Tanks style game built from the ground up in C and 68000 Assembly, on an Atari-ST Emulator. Every piece of this game and engine were built specifically\n                            to bypass any OS-level work and directly interface with all levels of hardware, including rendering, sound playback and custom interrupts.\n                            </div>\n                          </Card.Text>\n                          <br />\n                          <Button variant='secondary' size='sm' href='https://github.com/pmkstaples/Tanks-Game'>Source Code (GitHub)</Button>\n                        </Card>\n                      </CardGroup>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n              <Col sm={4}>\n                <Card text={text} bg={background} border={text} id='contactInfo'>\n                  <Card.Body>\n                    <Card.Title>\n                      Where To Find Me\n                    </Card.Title>\n                    <Card.Text>\n                      <SocialMediaIconsReact icon=\"linkedin\" url=\"https://www.linkedin.com/in/paul-s-3398a0a3/\" borderColor='black' size=\"38\" iconSize='7' />\n                      <SocialMediaIconsReact icon=\"github\" url=\"https://github.com/pmkstaples\" borderColor='black' size='38' iconSize='7'/>\n                      <SocialMediaIconsReact icon=\"mail\" url=\"mailto:pmkstaples@gmail.com\" borderColor='black' size='38' iconSize='7'backgroundColor='black' />\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n      </header>\n      <footer className='foot' style={{fontSize: 10 , backgroundColor: 'black', color: 'white'}}>\n        Paul Staples 2020\n        Background courtesy of WallpaperAccess\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/croppedface.90d940c4.jpg\";"],"sourceRoot":""}